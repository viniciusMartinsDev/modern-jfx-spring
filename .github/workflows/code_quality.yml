name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make Maven wrapper executable
        run: chmod +x ./mvnw

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Compile project
        run: ./mvnw clean compile

      - name: Run tests
        run: ./mvnw test
        continue-on-error: true

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            target/surefire-reports/*.xml
          check_name: "Test Results"
          comment_mode: off

      - name: Run SpotBugs analysis
        run: ./mvnw spotbugs:check
        continue-on-error: true

      - name: Check code style with Checkstyle
        run: ./mvnw checkstyle:check
        continue-on-error: true

      - name: Package application
        run: ./mvnw package -DskipTests
        if: success()

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: jar-artifact
          path: target/*.jar
          retention-days: 5

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            target/surefire-reports/
            target/checkstyle-result.xml
            target/spotbugsXml.xml
          retention-days: 5

      - name: Test Summary
        if: always()
        run: |
          echo "## 📊 Test Summary" >> $GITHUB_STEP_SUMMARY
          
          if [ -d "target/surefire-reports" ]; then
            TEST_COUNT=$(find target/surefire-reports -name "*.xml" -exec grep -l "testsuite" {} \; | wc -l)
            echo "- Test files found: $TEST_COUNT" >> $GITHUB_STEP_SUMMARY
          
            # Count passed/failed tests if files exist
            if [ $TEST_COUNT -gt 0 ]; then
              TOTAL_TESTS=$(grep -h "tests=" target/surefire-reports/*.xml | sed 's/.*tests="\([0-9]*\)".*/\1/' | awk '{sum+=$1} END {print sum+0}')
              FAILED_TESTS=$(grep -h "failures=" target/surefire-reports/*.xml | sed 's/.*failures="\([0-9]*\)".*/\1/' | awk '{sum+=$1} END {print sum+0}')
              PASSED_TESTS=$((TOTAL_TESTS - FAILED_TESTS))
          
              echo "- Total tests: $TOTAL_TESTS" >> $GITHUB_STEP_SUMMARY
              echo "- Passed: ✅ $PASSED_TESTS" >> $GITHUB_STEP_SUMMARY
              echo "- Failed: ❌ $FAILED_TESTS" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- No test results found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔍 Code Quality Checks" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Compilation completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ SpotBugs analysis completed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Checkstyle analysis completed" >> $GITHUB_STEP_SUMMARY